version: '3.8'
services:
  postgresql:
    image: postgres:13.16-bookworm
    container_name: copytrello-postgres
    ports:
      - '5431:5432'
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: copytrello_db
    volumes:
      - copytrello_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${copytrello_db}"]
      interval: 20s
      timeout: 5s
      retries: 3
    networks:
      - copytrello

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: copytrello-zookeeper
    restart: on-failure
    ports:
      - '2181:2181'
    environment:
      ZOO_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - copytrello

  kafka:
    image: bitnami/kafka:latest
    container_name: copytrello-kafka
    restart: on-failure
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_TOPIC: EMAIL_SENDING_TASKS, LOG_SENDING_TASKS
      ALLOW_PLAINTEXT_LISTENER: yes
    networks:
      - copytrello

  mongo:
      image: mongo
      container_name: copytrello-mongo
      restart: always
      environment:
        MONGO_INITDB_DATABASE: copytrello_logs_db
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: example
      ports:
        - "27017:27017"
      volumes:
        - copytrello_logs_db:/var/lib/mongodb/data
      networks:
        - copytrello

  mongo-express:
      image: mongo-express
      container_name: copytrello-mongo-express
      restart: always
      ports:
        - 8081:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: root
        ME_CONFIG_MONGODB_ADMINPASSWORD: example
        ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
        ME_CONFIG_BASICAUTH: false
      depends_on:
        - mongo
      networks:
        - copytrello

  backend:
    restart: unless-stopped
    build:
      context: ./task-tracker-backend
      dockerfile: Dockerfile
    container_name: copytrello-backend
    depends_on:
      - postgresql
      - kafka
    ports:
      - '8300:8300'
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/copytrello_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_KEY: ${JWT_SECRET_KEY}
    volumes:
      - ./logs/backend:/logs
    networks:
      - copytrello

  scheduler:
    restart: unless-stopped
    build:
      context: ./task-tracker-scheduler
      dockerfile: Dockerfile
    container_name: copytrello-scheduler
    depends_on:
      - backend
    ports:
      - "8880:8880"
      - "5005:5005"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/copytrello_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
    volumes:
      - ./logs/scheduler:/logs
    networks:
      - copytrello

  email-sender:
    restart: unless-stopped
    build:
      context: ./task-tracker-email-sender
      dockerfile: Dockerfile
    container_name: copytrello-mail-sender
    depends_on:
      - kafka
    ports:
      - "8000:8000"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_MAIL_USERNAME: ${MAILjET_API_KEY}
      SPRING_MAIL_PASSWORD: ${MAILjET_SECRET_KEY}
      SPRING_MAIL_HOST: smtp.mailjet.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
      SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS: "true"
    volumes:
      - ./logs/email-sender:/logs
    networks:
      - copytrello

  loki:
    image: grafana/loki:main-39c47e5
    container_name: copytrello-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config:/etc/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - copytrello

  grafana:
    image: grafana/grafana:latest
    container_name: copytrello-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-config/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana-config/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    depends_on:
      - loki
    networks:
      - copytrello

volumes:
  copytrello_db: {}
  copytrello_logs_db: {}

networks:
  copytrello:
    driver: bridge
